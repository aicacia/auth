/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProtocolCredentialType } from './ProtocolCredentialType';
import {
    ProtocolCredentialTypeFromJSON,
    ProtocolCredentialTypeFromJSONTyped,
    ProtocolCredentialTypeToJSON,
} from './ProtocolCredentialType';
import type { WebauthncoseCOSEAlgorithmIdentifier } from './WebauthncoseCOSEAlgorithmIdentifier';
import {
    WebauthncoseCOSEAlgorithmIdentifierFromJSON,
    WebauthncoseCOSEAlgorithmIdentifierFromJSONTyped,
    WebauthncoseCOSEAlgorithmIdentifierToJSON,
} from './WebauthncoseCOSEAlgorithmIdentifier';

/**
 * 
 * @export
 * @interface ProtocolCredentialParameter
 */
export interface ProtocolCredentialParameter {
    /**
     * 
     * @type {WebauthncoseCOSEAlgorithmIdentifier}
     * @memberof ProtocolCredentialParameter
     */
    alg?: WebauthncoseCOSEAlgorithmIdentifier;
    /**
     * 
     * @type {ProtocolCredentialType}
     * @memberof ProtocolCredentialParameter
     */
    type?: ProtocolCredentialType;
}

/**
 * Check if a given object implements the ProtocolCredentialParameter interface.
 */
export function instanceOfProtocolCredentialParameter(value: object): boolean {
    return true;
}

export function ProtocolCredentialParameterFromJSON(json: any): ProtocolCredentialParameter {
    return ProtocolCredentialParameterFromJSONTyped(json, false);
}

export function ProtocolCredentialParameterFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProtocolCredentialParameter {
    if (json == null) {
        return json;
    }
    return {
        
        'alg': json['alg'] == null ? undefined : WebauthncoseCOSEAlgorithmIdentifierFromJSON(json['alg']),
        'type': json['type'] == null ? undefined : ProtocolCredentialTypeFromJSON(json['type']),
    };
}

export function ProtocolCredentialParameterToJSON(value?: ProtocolCredentialParameter | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'alg': WebauthncoseCOSEAlgorithmIdentifierToJSON(value['alg']),
        'type': ProtocolCredentialTypeToJSON(value['type']),
    };
}

