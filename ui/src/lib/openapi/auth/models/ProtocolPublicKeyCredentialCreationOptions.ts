/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProtocolAuthenticatorSelection } from './ProtocolAuthenticatorSelection';
import {
    ProtocolAuthenticatorSelectionFromJSON,
    ProtocolAuthenticatorSelectionFromJSONTyped,
    ProtocolAuthenticatorSelectionToJSON,
} from './ProtocolAuthenticatorSelection';
import type { ProtocolConveyancePreference } from './ProtocolConveyancePreference';
import {
    ProtocolConveyancePreferenceFromJSON,
    ProtocolConveyancePreferenceFromJSONTyped,
    ProtocolConveyancePreferenceToJSON,
} from './ProtocolConveyancePreference';
import type { ProtocolCredentialDescriptor } from './ProtocolCredentialDescriptor';
import {
    ProtocolCredentialDescriptorFromJSON,
    ProtocolCredentialDescriptorFromJSONTyped,
    ProtocolCredentialDescriptorToJSON,
} from './ProtocolCredentialDescriptor';
import type { ProtocolCredentialParameter } from './ProtocolCredentialParameter';
import {
    ProtocolCredentialParameterFromJSON,
    ProtocolCredentialParameterFromJSONTyped,
    ProtocolCredentialParameterToJSON,
} from './ProtocolCredentialParameter';
import type { ProtocolRelyingPartyEntity } from './ProtocolRelyingPartyEntity';
import {
    ProtocolRelyingPartyEntityFromJSON,
    ProtocolRelyingPartyEntityFromJSONTyped,
    ProtocolRelyingPartyEntityToJSON,
} from './ProtocolRelyingPartyEntity';
import type { ProtocolUserEntity } from './ProtocolUserEntity';
import {
    ProtocolUserEntityFromJSON,
    ProtocolUserEntityFromJSONTyped,
    ProtocolUserEntityToJSON,
} from './ProtocolUserEntity';

/**
 * 
 * @export
 * @interface ProtocolPublicKeyCredentialCreationOptions
 */
export interface ProtocolPublicKeyCredentialCreationOptions {
    /**
     * 
     * @type {ProtocolConveyancePreference}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    attestation?: ProtocolConveyancePreference;
    /**
     * 
     * @type {ProtocolAuthenticatorSelection}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    authenticatorSelection?: ProtocolAuthenticatorSelection;
    /**
     * 
     * @type {Array<number>}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    challenge?: Array<number>;
    /**
     * 
     * @type {Array<ProtocolCredentialDescriptor>}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    excludeCredentials?: Array<ProtocolCredentialDescriptor>;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    extensions?: { [key: string]: any; };
    /**
     * 
     * @type {Array<ProtocolCredentialParameter>}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    pubKeyCredParams?: Array<ProtocolCredentialParameter>;
    /**
     * 
     * @type {ProtocolRelyingPartyEntity}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    rp?: ProtocolRelyingPartyEntity;
    /**
     * 
     * @type {number}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    timeout?: number;
    /**
     * 
     * @type {ProtocolUserEntity}
     * @memberof ProtocolPublicKeyCredentialCreationOptions
     */
    user?: ProtocolUserEntity;
}

/**
 * Check if a given object implements the ProtocolPublicKeyCredentialCreationOptions interface.
 */
export function instanceOfProtocolPublicKeyCredentialCreationOptions(value: object): boolean {
    return true;
}

export function ProtocolPublicKeyCredentialCreationOptionsFromJSON(json: any): ProtocolPublicKeyCredentialCreationOptions {
    return ProtocolPublicKeyCredentialCreationOptionsFromJSONTyped(json, false);
}

export function ProtocolPublicKeyCredentialCreationOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProtocolPublicKeyCredentialCreationOptions {
    if (json == null) {
        return json;
    }
    return {
        
        'attestation': json['attestation'] == null ? undefined : ProtocolConveyancePreferenceFromJSON(json['attestation']),
        'authenticatorSelection': json['authenticatorSelection'] == null ? undefined : ProtocolAuthenticatorSelectionFromJSON(json['authenticatorSelection']),
        'challenge': json['challenge'] == null ? undefined : json['challenge'],
        'excludeCredentials': json['excludeCredentials'] == null ? undefined : ((json['excludeCredentials'] as Array<any>).map(ProtocolCredentialDescriptorFromJSON)),
        'extensions': json['extensions'] == null ? undefined : json['extensions'],
        'pubKeyCredParams': json['pubKeyCredParams'] == null ? undefined : ((json['pubKeyCredParams'] as Array<any>).map(ProtocolCredentialParameterFromJSON)),
        'rp': json['rp'] == null ? undefined : ProtocolRelyingPartyEntityFromJSON(json['rp']),
        'timeout': json['timeout'] == null ? undefined : json['timeout'],
        'user': json['user'] == null ? undefined : ProtocolUserEntityFromJSON(json['user']),
    };
}

export function ProtocolPublicKeyCredentialCreationOptionsToJSON(value?: ProtocolPublicKeyCredentialCreationOptions | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'attestation': ProtocolConveyancePreferenceToJSON(value['attestation']),
        'authenticatorSelection': ProtocolAuthenticatorSelectionToJSON(value['authenticatorSelection']),
        'challenge': value['challenge'],
        'excludeCredentials': value['excludeCredentials'] == null ? undefined : ((value['excludeCredentials'] as Array<any>).map(ProtocolCredentialDescriptorToJSON)),
        'extensions': value['extensions'],
        'pubKeyCredParams': value['pubKeyCredParams'] == null ? undefined : ((value['pubKeyCredParams'] as Array<any>).map(ProtocolCredentialParameterToJSON)),
        'rp': ProtocolRelyingPartyEntityToJSON(value['rp']),
        'timeout': value['timeout'],
        'user': ProtocolUserEntityToJSON(value['user']),
    };
}

