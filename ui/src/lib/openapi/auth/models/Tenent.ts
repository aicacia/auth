/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Tenent
 */
export interface Tenent {
    /**
     * 
     * @type {string}
     * @memberof Tenent
     */
    algorithm: string;
    /**
     * 
     * @type {number}
     * @memberof Tenent
     */
    applicationId: number;
    /**
     * 
     * @type {string}
     * @memberof Tenent
     */
    authorizationWebsite: string;
    /**
     * 
     * @type {string}
     * @memberof Tenent
     */
    clientId: string;
    /**
     * 
     * @type {Date}
     * @memberof Tenent
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Tenent
     */
    description: string;
    /**
     * 
     * @type {number}
     * @memberof Tenent
     */
    expiresInSeconds: number;
    /**
     * 
     * @type {number}
     * @memberof Tenent
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof Tenent
     */
    passwordResetExpiresInSeconds: number;
    /**
     * 
     * @type {string}
     * @memberof Tenent
     */
    publicKey?: string;
    /**
     * 
     * @type {number}
     * @memberof Tenent
     */
    refreshExpiresInSeconds: number;
    /**
     * 
     * @type {string}
     * @memberof Tenent
     */
    registrationWebsite?: string;
    /**
     * 
     * @type {Date}
     * @memberof Tenent
     */
    updatedAt: Date;
    /**
     * 
     * @type {string}
     * @memberof Tenent
     */
    uri: string;
}

/**
 * Check if a given object implements the Tenent interface.
 */
export function instanceOfTenent(value: object): boolean {
    if (!('algorithm' in value)) return false;
    if (!('applicationId' in value)) return false;
    if (!('authorizationWebsite' in value)) return false;
    if (!('clientId' in value)) return false;
    if (!('createdAt' in value)) return false;
    if (!('description' in value)) return false;
    if (!('expiresInSeconds' in value)) return false;
    if (!('id' in value)) return false;
    if (!('passwordResetExpiresInSeconds' in value)) return false;
    if (!('refreshExpiresInSeconds' in value)) return false;
    if (!('updatedAt' in value)) return false;
    if (!('uri' in value)) return false;
    return true;
}

export function TenentFromJSON(json: any): Tenent {
    return TenentFromJSONTyped(json, false);
}

export function TenentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Tenent {
    if (json == null) {
        return json;
    }
    return {
        
        'algorithm': json['algorithm'],
        'applicationId': json['application_id'],
        'authorizationWebsite': json['authorization_website'],
        'clientId': json['client_id'],
        'createdAt': (new Date(json['created_at'])),
        'description': json['description'],
        'expiresInSeconds': json['expires_in_seconds'],
        'id': json['id'],
        'passwordResetExpiresInSeconds': json['password_reset_expires_in_seconds'],
        'publicKey': json['public_key'] == null ? undefined : json['public_key'],
        'refreshExpiresInSeconds': json['refresh_expires_in_seconds'],
        'registrationWebsite': json['registration_website'] == null ? undefined : json['registration_website'],
        'updatedAt': (new Date(json['updated_at'])),
        'uri': json['uri'],
    };
}

export function TenentToJSON(value?: Tenent | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'algorithm': value['algorithm'],
        'application_id': value['applicationId'],
        'authorization_website': value['authorizationWebsite'],
        'client_id': value['clientId'],
        'created_at': ((value['createdAt']).toISOString()),
        'description': value['description'],
        'expires_in_seconds': value['expiresInSeconds'],
        'id': value['id'],
        'password_reset_expires_in_seconds': value['passwordResetExpiresInSeconds'],
        'public_key': value['publicKey'],
        'refresh_expires_in_seconds': value['refreshExpiresInSeconds'],
        'registration_website': value['registrationWebsite'],
        'updated_at': ((value['updatedAt']).toISOString()),
        'uri': value['uri'],
    };
}

