/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TokenRequest
 */
export interface TokenRequest {
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    actorToken?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    actorTokenType?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    assertion?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    audience?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    codeVerifier?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    grantType: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    key?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    password?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    refreshToken?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    requestedTokenType?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    resource?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    scope?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    secret?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    subjectToken?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    subjectTokenType?: string;
    /**
     * 
     * @type {string}
     * @memberof TokenRequest
     */
    username?: string;
}

/**
 * Check if a given object implements the TokenRequest interface.
 */
export function instanceOfTokenRequest(value: object): boolean {
    if (!('grantType' in value)) return false;
    return true;
}

export function TokenRequestFromJSON(json: any): TokenRequest {
    return TokenRequestFromJSONTyped(json, false);
}

export function TokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'actorToken': json['actor_token'] == null ? undefined : json['actor_token'],
        'actorTokenType': json['actor_token_type'] == null ? undefined : json['actor_token_type'],
        'assertion': json['assertion'] == null ? undefined : json['assertion'],
        'audience': json['audience'] == null ? undefined : json['audience'],
        'code': json['code'] == null ? undefined : json['code'],
        'codeVerifier': json['code_verifier'] == null ? undefined : json['code_verifier'],
        'grantType': json['grant_type'],
        'key': json['key'] == null ? undefined : json['key'],
        'password': json['password'] == null ? undefined : json['password'],
        'refreshToken': json['refresh_token'] == null ? undefined : json['refresh_token'],
        'requestedTokenType': json['requested_token_type'] == null ? undefined : json['requested_token_type'],
        'resource': json['resource'] == null ? undefined : json['resource'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'secret': json['secret'] == null ? undefined : json['secret'],
        'subjectToken': json['subject_token'] == null ? undefined : json['subject_token'],
        'subjectTokenType': json['subject_token_type'] == null ? undefined : json['subject_token_type'],
        'username': json['username'] == null ? undefined : json['username'],
    };
}

export function TokenRequestToJSON(value?: TokenRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'actor_token': value['actorToken'],
        'actor_token_type': value['actorTokenType'],
        'assertion': value['assertion'],
        'audience': value['audience'],
        'code': value['code'],
        'code_verifier': value['codeVerifier'],
        'grant_type': value['grantType'],
        'key': value['key'],
        'password': value['password'],
        'refresh_token': value['refreshToken'],
        'requested_token_type': value['requestedTokenType'],
        'resource': value['resource'],
        'scope': value['scope'],
        'secret': value['secret'],
        'subject_token': value['subjectToken'],
        'subject_token_type': value['subjectTokenType'],
        'username': value['username'],
    };
}

