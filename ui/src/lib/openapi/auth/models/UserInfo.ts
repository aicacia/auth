/* tslint:disable */
/* eslint-disable */
/**
 * Auth API
 * Auth API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UserInfoAddress } from './UserInfoAddress';
import {
    UserInfoAddressFromJSON,
    UserInfoAddressFromJSONTyped,
    UserInfoAddressToJSON,
} from './UserInfoAddress';

/**
 * 
 * @export
 * @interface UserInfo
 */
export interface UserInfo {
    /**
     * 
     * @type {UserInfoAddress}
     * @memberof UserInfo
     */
    address: UserInfoAddress;
    /**
     * 
     * @type {Date}
     * @memberof UserInfo
     */
    birthdate?: Date;
    /**
     * 
     * @type {Date}
     * @memberof UserInfo
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    familyName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    gender?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    givenName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    locale?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    middleName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    nickname?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    picture?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    preferredUsername: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    profile?: string;
    /**
     * 
     * @type {Date}
     * @memberof UserInfo
     */
    updatedAt: Date;
    /**
     * 
     * @type {number}
     * @memberof UserInfo
     */
    userId: number;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    website?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    zoneinfo?: string;
}

/**
 * Check if a given object implements the UserInfo interface.
 */
export function instanceOfUserInfo(value: object): boolean {
    if (!('address' in value)) return false;
    if (!('createdAt' in value)) return false;
    if (!('preferredUsername' in value)) return false;
    if (!('updatedAt' in value)) return false;
    if (!('userId' in value)) return false;
    return true;
}

export function UserInfoFromJSON(json: any): UserInfo {
    return UserInfoFromJSONTyped(json, false);
}

export function UserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'address': UserInfoAddressFromJSON(json['address']),
        'birthdate': json['birthdate'] == null ? undefined : (new Date(json['birthdate'])),
        'createdAt': (new Date(json['created_at'])),
        'familyName': json['family_name'] == null ? undefined : json['family_name'],
        'gender': json['gender'] == null ? undefined : json['gender'],
        'givenName': json['given_name'] == null ? undefined : json['given_name'],
        'locale': json['locale'] == null ? undefined : json['locale'],
        'middleName': json['middle_name'] == null ? undefined : json['middle_name'],
        'name': json['name'] == null ? undefined : json['name'],
        'nickname': json['nickname'] == null ? undefined : json['nickname'],
        'picture': json['picture'] == null ? undefined : json['picture'],
        'preferredUsername': json['preferred_username'],
        'profile': json['profile'] == null ? undefined : json['profile'],
        'updatedAt': (new Date(json['updated_at'])),
        'userId': json['user_id'],
        'website': json['website'] == null ? undefined : json['website'],
        'zoneinfo': json['zoneinfo'] == null ? undefined : json['zoneinfo'],
    };
}

export function UserInfoToJSON(value?: UserInfo | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'address': UserInfoAddressToJSON(value['address']),
        'birthdate': value['birthdate'] == null ? undefined : ((value['birthdate']).toISOString()),
        'created_at': ((value['createdAt']).toISOString()),
        'family_name': value['familyName'],
        'gender': value['gender'],
        'given_name': value['givenName'],
        'locale': value['locale'],
        'middle_name': value['middleName'],
        'name': value['name'],
        'nickname': value['nickname'],
        'picture': value['picture'],
        'preferred_username': value['preferredUsername'],
        'profile': value['profile'],
        'updated_at': ((value['updatedAt']).toISOString()),
        'user_id': value['userId'],
        'website': value['website'],
        'zoneinfo': value['zoneinfo'],
    };
}

